---
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import { contentfulClient } from "../contentful";
import type { EntryFieldTypes } from "contentful";

interface Signup {
    contentTypeId: "signup";
    fields: {
        content: EntryFieldTypes.RichText;
        buttonContent: EntryFieldTypes.Text;
        buttonLink: EntryFieldTypes.Text;
    };
}

const [signup] = await contentfulClient.withoutUnresolvableLinks
    .getEntries<Signup>({
        content_type: "signup",
    })
    .then((result) => result.items);
---

<section id="signup">
    <div class="background"></div>
    <div class="content">
        <div set:html={documentToHtmlString(signup.fields.content)} />
        <a href={signup.fields.buttonLink} class="button"
            >{signup.fields.buttonContent}</a
        >
    </div>
</section>

<style lang="scss">
    #signup {
        position: relative;
        color: white;
        display: grid;
        width: 100%;
        margin-top: 3rem;
        margin-bottom: 3rem;

        .background {
            position: absolute;
            top: 0;
            left: -5vw;
            width: 100vw;
            height: 100%;
            background: linear-gradient(90deg, #197052 34.31%, #28b886 94.32%);

            /* The padding on the main element increases on larger screens */
            @media screen and (min-width: 800px) {
                & {
                    left: -12.5vw;
                }
            }
        }

        .content {
            margin: auto;
            padding: 3rem 1rem;
            text-align: center;
            z-index: 100;

            :global(h1, h2) {
                margin-top: 0;
            }
        }
    }

    .button {
        display: inline-block;
        padding: 1rem 2rem;
        margin-top: 1rem;
        background-color: #ffffff;
        color: #197052;
        font-size: 1.2rem;
        border-radius: 5px;
        text-decoration: none;
        font-weight: bold;
        text-align: center;
        transition: opacity 0.3s ease;

        &:hover {
            opacity: 0.7;
        }
    }
</style>
