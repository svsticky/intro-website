---
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import { contentfulClient } from "../contentful";
import type { EntryFieldTypes } from "contentful";

interface Person {
    contentTypeId: "person";
    fields: {
        name: EntryFieldTypes.Symbol;
        email: EntryFieldTypes.Symbol;
        phone: EntryFieldTypes.Symbol;
        role: EntryFieldTypes.Array<
            EntryFieldTypes.Symbol<
                "Secretaris" | "Vertrouwenscontactpersoon" | "Voorzitter"
            >
        >;
        photo: EntryFieldTypes.AssetLink;
    };
}

interface Contact {
    contentTypeId: "contact";
    fields: {
        contactContent: EntryFieldTypes.RichText;
        contactPersons: EntryFieldTypes.Array<
            EntryFieldTypes.EntryLink<Person>
        >;
        confidentialContent: EntryFieldTypes.RichText;
        confidentialContactPersons: EntryFieldTypes.Array<
            EntryFieldTypes.EntryLink<Person>
        >;
    };
}

const [contact] = await contentfulClient.withoutUnresolvableLinks
    .getEntries<Contact>({
        content_type: "contact",
    })
    .then((result) => result.items);
---

<section id="contact">
    <div set:html={documentToHtmlString(contact.fields.contactContent)} />

    <div class="contact-grid">
        {
            contact.fields.contactPersons.map((contact) => (
                <div class="contact-card">
                    <div class="contact-info">
                        <h3>{contact!.fields.name}</h3>
                        <p>
                            <strong>{contact!.fields.role}</strong>
                        </p>
                        <p>
                            <span class="icon">ðŸ“§</span>
                            <span>{contact!.fields.email}</span>
                        </p>
                        <p>
                            <span class="icon">ðŸ“ž</span>
                            <span>{contact!.fields.phone}</span>
                        </p>
                    </div>
                    <img
                        src={contact!.fields.photo?.fields.file?.url}
                        alt={contact!.fields.name}
                    />
                </div>
            ))
        }
    </div>

    <div set:html={documentToHtmlString(contact.fields.confidentialContent)} />

    <div class="contact-grid">
        {
            contact.fields.confidentialContactPersons.map((contact) => (
                <div class="contact-card">
                    <div class="contact-info">
                        <h3>{contact!.fields.name}</h3>
                        <p>
                            <strong>{contact!.fields.role}</strong>
                        </p>
                        <p>
                            <span class="icon">ðŸ“ž</span>{" "}
                            <span>{contact!.fields.phone}</span>
                        </p>
                    </div>
                    <img
                        src={contact!.fields.photo?.fields.file?.url}
                        alt={contact!.fields.name}
                        class="contact-image"
                    />
                </div>
            ))
        }
    </div>
</section>

<style lang="scss">
    .contact-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 2rem;
        margin-top: 1.5rem;

        .contact-card {
            display: grid;
            grid-template-columns: 66.6% 33.3%;
            background: #fff;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            width: 100%;
            border-left: 10px solid #197052;
        }

        .contact-info {
            margin: auto 1.5rem;

            h3 {
                margin: 0;
                font-size: 1.4rem;
                font-weight: bold;
            }

            p {
                margin: 0.2rem 0;
                color: #555;

                span {
                    font-size: 0.85rem;
                }
            }
        }

        img {
            width: 100%;
            aspect-ratio: 1 / 1;
            object-fit: cover;
        }

        strong {
            color: black;
            hyphens: auto;
            -webkit-hyphens: auto;
            -moz-hyphens: auto;
        }
    }

    @media (min-width: 767px) {
        .contact-grid {
            grid-template-columns: 1fr 1fr;
        }
    }
</style>
