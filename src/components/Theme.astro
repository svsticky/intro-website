---
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import { BLOCKS, type Document } from "@contentful/rich-text-types";
import { contentfulClient } from "../contentful";
import type { EntryFieldTypes, Entry } from "contentful";

interface Supermentor {
    contentTypeId: "supermentor";
    fields: {
        name: EntryFieldTypes.Text;
        picture: EntryFieldTypes.AssetLink;
        content: EntryFieldTypes.RichText;
    };
}

interface Theme {
    contentTypeId: "theme";
    fields: {
        content: EntryFieldTypes.RichText;
        reveal?: EntryFieldTypes.RichText;
        supermentors?: EntryFieldTypes.RichText;
    }
}

function isSuperMentor(node: any): node is { data: { target: Entry<Supermentor, "WITHOUT_UNRESOLVABLE_LINKS"> } } {
    return node.data.target.sys.contentType.sys.id === "supermentor";
}

const [theme] = await contentfulClient.withoutUnresolvableLinks
    .getEntries<Theme>({
        content_type: "theme",
    })
    .then((result) => result.items);

const mentors = theme.fields.supermentors;
---

<section id="theme">
    <div set:html={documentToHtmlString(theme.fields.content)} />

    <div set:html={
    theme.fields.reveal
        ? documentToHtmlString(theme.fields.reveal, {
            renderNode: {
                [BLOCKS.EMBEDDED_ASSET]: (node) => 
                    `<div class="theme-box">
                        <img
                            src=${node.data.target.fields.file.url}
                            alt=${node.data.target.fields.description}
                        />
                    </div>`
            }
        })
        : ""
    } />

    <div class="supermentors" set:html={
    mentors
        ? documentToHtmlString(mentors, {
            renderNode: {
                [BLOCKS.EMBEDDED_ENTRY]: (node) => {
                    if (isSuperMentor(node)) {
                        const mentor = node.data.target;
                        return `
                            <div class="supermentor">
                                <div class="content">
                                    <h3>${mentor.fields.name}</h3>
                                    ${documentToHtmlString(mentor.fields.content)}
                                </div>
                                <img
                                    src=${mentor.fields.picture?.fields.file?.url}
                                    alt=${mentor.fields.name}
                                />
                            </div>
                        `;
                    } else {
                        return "";
                    }
                }
            }
        })
        : ""
    } />
</section>

<style lang="scss">
    :global(.theme-box) {
        display: flex;
        justify-content: center;
        align-items: center;
        background: #fff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 100%;
        margin: 2rem 0;

        :global(img) {
            width: 100%;
            height: auto;
            padding: 3rem;
        }
    }

    .supermentors {
        height: max-content;

        /*
            We need :global here since the supermentors are generated
            by contentful and are therefore not astro-managed.
        */
        :global(.supermentor) {
            display: grid;
            grid-template-columns: 3fr 1fr;
            gap: 1rem;

            :global(.content) {
                margin: auto;
            }

            :global(img) {
                margin: auto;
                padding: 1rem 0;
                width: 100%;
                aspect-ratio: 1 / 1;
                object-fit: cover;
            }
        }
    }
</style>