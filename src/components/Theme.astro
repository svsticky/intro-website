---
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import { contentfulClient } from "../contentful";
import type { EntryFieldTypes } from "contentful";
import { Image } from "astro-preload/components";

interface Supermentor {
    contentTypeId: "supermentor";
    fields: {
        name: EntryFieldTypes.Text;
        picture: EntryFieldTypes.AssetLink;
        content: EntryFieldTypes.RichText;
    };
}

interface Theme {
    contentTypeId: "theme";
    fields: {
        content: EntryFieldTypes.RichText;
        reveal?: EntryFieldTypes.RichText;
        supermentorText?: EntryFieldTypes.RichText;
        supermentors?: EntryFieldTypes.Array<
            EntryFieldTypes.EntryLink<Supermentor>
        >;
    };
}

const [theme] = await contentfulClient.withoutUnresolvableLinks
    .getEntries<Theme>({
        content_type: "theme",
    })
    .then((result) => result.items);

const mentorsText = theme.fields.supermentorText;
const mentors = theme.fields.supermentors ?? [];
---

<section id="theme">
    <div set:html={documentToHtmlString(theme.fields.content)} />

    {
        theme.fields.reveal?.content.map((node) => {
            if (node.nodeType === "embedded-asset-block") {
                const asset = node.data.target;
                const url = asset.fields.file.url;
                const alt = asset.fields.description || "Thema afbeelding";

                return (
                    <div class="theme-box">
                        <img src={url} alt={alt} />
                    </div>
                );
            }
        })
    }

    { mentorsText &&
        <div set:html={documentToHtmlString(mentorsText)} /> }

    <div class="supermentors">
        {
            mentors.map(
                (mentor) =>
                    mentor && (
                        <div class="supermentor">
                            <h3>{mentor.fields.name}</h3>
                            <div class="mentor-content">
                                <Image
                                    url={
                                        "https:" +
                                        mentor.fields.picture!.fields.file!.url +
                                        "?w=400&h=400&fit=thumb"
                                    }
                                    alt={mentor.fields.picture!.fields.title}
                                />
                                <div
                                    set:html={documentToHtmlString(
                                        mentor.fields.content,
                                    )}
                                />
                            </div>
                        </div>
                    ),
            )
        }
    </div>
</section>

<style lang="scss">
    .supermentor {
        overflow: auto;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e0e0e0;

        h3 {
            margin-bottom: 0.5rem;
        }

        .mentor-content {
            position: relative;
            overflow: auto;

            img {
                float: right;
                width: 50%;
                max-width: 200px;
                height: auto;
                object-fit: cover;
                border-radius: 0.5rem;
                margin-bottom: 0.5rem;
                margin-left: 1rem;
                clear: both;
                display: inline-block;
                aspect-ratio: 1 / 1;
            }
        }
    }

    .theme-box {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 2rem 0;
        width: 100%;

        img {
            width: 100%;
            max-width: 600px;
            height: auto;
            border-radius: 0.5rem;
        }
    }
</style>
