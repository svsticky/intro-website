name: Build and deploy

on:
  workflow_dispatch: # For manual dispatch on GitHub, and webhooks from Contentful
  schedule:
    # Trigger a monthly deploy in order to prevent artifact staleness
    - cron: "0 0 1 * *"
  #   TODO add this routine to healthchecks.io

  push:
    branches:
      - '**'  # Listen to all branches

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build artifact with Contentful
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Setup `bun` ðŸ¥Ÿ
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Generate a production build
        run: bun run build
        env:
          CONTENTFUL_SPACE_ID:       ${{ secrets.CONTENTFUL_SPACE_ID       }}
          CONTENTFUL_DELIVERY_TOKEN: ${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}
          CONTENTFUL_ENVIRONMENT:    ${{ vars.CONTENTFUL_ENVIRONMENT }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: website-build-static-files
          path: ./dist/
          retention-days: 45

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
    name: Notify server of new artifact
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    steps:
      - name: Trigger deploy on server
        uses: distributhor/workflow-webhook@v3
        env:
          webhook_url:    ${{ vars.AAS_URL }}
          webhook_secret: ${{ secrets.AAS_PRE_SHARED_KEY }}

  dockerize:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
    name: Package Docker image as artifact
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Astro build artifact (dist/)
        uses: actions/download-artifact@v4
        with:
          name: website-build-static-files
          path: dist/
      
      - name: Build Docker image
        run: |
          docker build -t astro-site:${{ github.sha }} . --build-arg BUILD_NUMBER=${{ github.run_id }}

      # as we do not have a proper docker registry yet; just save it as an artifact. TODO: make this push to our self-hosted docker registry.
      - name: Save Docker image as .tar
        run: |
          docker save astro-site | gzip > astro-site.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: astro-site-docker-image
          path: astro-site.tar.gz
          retention-days: 30